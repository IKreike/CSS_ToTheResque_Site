:root {
    /* a nice contrast */
    --backroundColor: oklch(38% 0.0814 268.41);
    /* kleur van de grote oppervlakken van het paneel */
    /* --deviceColor: oklch(26.29% 0.021 153.93); */
    --deviceColor: oklch(84.26% 0.1381 72.53);
    /* kleur van de 2e dementie van het paneel(schaduwen) */
    /* --accentColor: oklch(40.7% 0.0271 153.93); */
    --accentColor: rgba(158, 102, 11);
    /* kleur voor ingebouwde accenten */
    --darkColor: rgba(65, 48, 20);
    /* kleur van roest en natuurlijkere en dingen */
    --rustColor: rgb(99, 12, 12);
    --metalColor: oklch(45.15% 0.0345 75.05);
    --metalColorAccent: oklch(41.62% 0.0469 75.05);
    --metalColorSchadow: oklch(33.38% 0.0222 75.05);

    --percent-shadow: 15%;
    --corner-angle: 50deg;
    --corner-size: 5rem;
}

body {
    /* background-color: rgba(240, 157, 24, 0.617); */
    background-color: var(--backroundColor);
    display: grid;
    grid-template-columns: 2fr 1fr 3fr 1fr 2fr;
    grid-template-rows: repeat 5 1fr;
    gap: 2em;
    height: 100vh;
    width: 100vw;

    margin: 0;
    border: 0;
    box-sizing: border-box;
    position: relative;
}

/* different parts of the machine */
section {
    /* look into this for straight corners: https://blog.logrocket.com/create-fancy-corners-css/ */

    /* making corners and the bottom shadow */
    /* workshop van sanne: https://codepen.io/IKreike/pen/pvoeRem?editors=1100 */
    /* meer tips van sanne over gradiend over elkaar: */
    /* https://codepen.io/IKreike/pen/LEYWMLm?editors=0100 */
    background-size: calc(50% + 0.5px) calc((100% - var(--percent-shadow))/2), calc(50% + 0.5px) calc((100% - var(--percent-shadow))/2), calc(50% + 0.5px) calc(50% + 0.5px), calc(50% + 0.5px) calc(50% + 0.5px);
    background-repeat: no-repeat;
    background-position: left calc(100% - var(--percent-shadow)), right calc(100% - var(--percent-shadow)), left top, right top, left bottom, right bottom;
    background-image:
        linear-gradient(var(--corner-angle), transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(calc(-1 * var(--corner-angle)), transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(160deg, transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(-160deg, transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(var(--corner-angle), transparent var(--corner-size), var(--accentColor)0),
        linear-gradient(calc(-1 * var(--corner-angle)), transparent var(--corner-size), var(--accentColor)0);
}

/* use this to hide the  arm moving over the section*/
/* things are still sticking out, would it be possible to use this as a mask for the thing? im also scared im not able to place buttons on top of it */
/* source:  nils 10/3/25*/
/* section:nth-of-type(2):after {
    content: "";
    position: absolute;
    inset: 0;
    inset-block-end: 20%;
    inset-block-start: 10%;
    background: #f09;
    z-index: 2;
} */

section:nth-of-type(1) {
    grid-column: span 3/5;
    /* grid-row: span 1/4; */
    display: grid;
    grid-template-columns: 1fr 3fr 1fr;
    grid-template-rows: 1fr 3fr 1fr;
}

section:nth-of-type(2) {
    /* --corner-angle: 10deg; */
    /* background: red; */
    --corner-size: 1vw;
    margin: 2rem;
    position: relative;

    display: none;
    z-index: -1;

    div {
        /* content: ""; */
        width: 15rem;
        height: 15rem;
        aspect-ratio: 1;
        /* position: relative; */
        z-index: -2;

        background:
            linear-gradient(to top, var(--accentColor) var(--percent-shadow), var(--deviceColor) var(--percent-shadow) 50%, transparent 0),
            linear-gradient(to right, var(--accentColor) var(--percent-shadow), var(--deviceColor) var(--percent-shadow) 50%, transparent 0);

        background-size: calc(100% - var(--percent-shadow)) 100%, 100% 100%;
        background-position: bottom right, top left;
        background-repeat: no-repeat;
        position: absolute;

        left: -15rem;
        top: 50%;
        filter: brightness(.8);

        border-radius: 0;
        border: none;

        /* mask turns with so not a viable solution */
        /* mask-image: linear-gradient(to top, red 70%, transparent 70%); */
        /* mask-size:5em 5em; */
        /* mask-repeat:no-repeat; */
        /* mask-position: 40% center, 60% center; */
        /* mask-position: fixed; */
    }
}


/* display screen */
div {
    grid-column: 2;
    grid-row: 2;
    background-color: var(--accentColor);
    border: .5em var(--darkColor) solid;
    aspect-ratio: 1/1;
    border-radius: 50%;
    /* max-width: fit-content; */
    max-width: 40vw;
    max-height: 60vh;
    margin: auto;
    min-width: 20vw;
}

section:nth-of-type(1) div::after {
    content: "";
    position: absolute;

    width: 100%;
    max-width: 30vw;
    max-height: 50vh;
    aspect-ratio: 1;

    background-color: rgba(21, 255, 0, 0.182);
    opacity: 0;
    border-radius: 50rem;
    filter: blur(2rem);
}

/* Power button */
input:nth-of-type(1),
label:nth-of-type(1) {
    grid-column: 3;
    grid-row: 3;
    /* add styling on the div, on the thing or whatso? use sannes switch as reference? */
}


label:nth-of-type(1) {
    background: linear-gradient(var(--rustColor) calc(100% - var(--percent-shadow)), var(--accentColor) 0);
    /* background-color: hotpink; */
    width: fit-content;
    height: fit-content;
    padding-bottom: var(--percent-shadow);
    /* padding:var(--percent-shadow); */
}

input:nth-of-type(1) {
    appearance: none;
    background: linear-gradient(var(--metalColor) 50%, var(--metalColorAccent) 0%);
    width: 4em;
    aspect-ratio: 3/4;
}

/* switch de kleuren in de "checked" state */
input:checked {
    background: linear-gradient(to bottom, var(--metalColorAccent) 45%, var(--metalColor)0 90%, var(--metalColorSchadow)0);
}



/* kijkt specifiek naar of de powerknop aanstaat */
*:has(input[type=checkbox]:checked) div::after {
    /* if the power switch is on, flicker into view as if the screen lights up*/
    /* background-color: rgba(128, 255, 0, 0.221); */
    animation: linear 3s turnOn forwards;
}

@keyframes turnOn {
    0% {
        /* background-color: red; */
        opacity: 0;
    }

    2% {
        opacity: 1;
    }

    5% {
        opacity: 0;
    }

    10% {
        opacity: 1;
    }

    12% {
        opacity: 0;
    }

    19% {
        opacity: 1;
    }

    25% {
        opacity: 0;
    }

    27% {
        opacity: 1;
    }

    35% {
        opacity: 0;
    }

    100% {
        /* background-color: steelblue; */
        opacity: 1;
    }
}





label:nth-of-type(2) {
    --switch-widht: 3rem;

    /* border: red solid 2px; */
    grid-column: 3;
    grid-row: 2;
    width: var(--switch-widht);
    max-width: max-content;
    aspect-ratio: 1/2;

    background-color: var(--rustColor);
    /* margin: 0; */
    /* padding: 0; */

    padding-bottom: var(--percent-shadow) var(--accentColor) solid;

}

input[type=radio] {
    background: var(--metalColorAccent);
    width: 40%;
    height: 60%;

    margin: 0;
    padding: 0;
    position: relative;

    left: 30%;
    top: 0%;

    &:checked {
        /* do this in an animation? */
        /* top: 40%; */
        animation: switchStick .5s linear forwards;

        &::after {
            /* top: 70%; */
            animation: switchBol .5s linear forwards;
        }
    }

    &::after {
        content: "";
        background: var(--metalColor);
        border-radius: 50em;
        width: 200%;
        aspect-ratio: 1;
        position: absolute;

        left: -50%;
        top: -50%;

    }
}

@keyframes switchStick {
    from{
        /* transform: scaleY(1); */
    }
    50%{
        transform: scaleY(.5);
    }
    to{
        top: 40%;
        transform: scaleY(1);
    }
}
@keyframes switchBol{
    to{
        top: 70%;
    }
}


body:has(input[type=radio]:checked)>section:nth-of-type(2) {
    /* background: red; */
    animation: foldout 3s linear forwards;
    display: block;


    div {
        animation: hook 3s linear forwards;
        transform-origin: top left;
    }
}

@keyframes foldout {
    from {
        transform: translateX(-100%);
        scale: .8;
        filter: brightness(.7);
    }

    50% {
        scale: .8;
        transform: translateX(0%);
        filter: brightness(.7);
    }

    to {
        scale: 1;
        filter: brightness(1);

    }
}

@keyframes hook {
    from {
        transform: rotate(0);
    }

    50% {
        transform: rotate(0);
        left: -15em;
    }
    75% {
        background-size: calc(100% - var(--percent-shadow)) 100%, 100% 100%;
    }

    to {
        transform: rotate(-90deg);
        left: -7rem;
        background-size: 0 0, 100% calc(100% - 8rem);
    }
}


/* color test */
/* div:nth-of-type(2){
    width: 200px;
    height: 100px;
    grid-area: 1/ 1;
    border-radius: 0;
    border: black 2px dashed;
    background-image: 
    linear-gradient(var(--accentColor), var(--deviceColor), var(--rustColor), var(--darkColor));
} */