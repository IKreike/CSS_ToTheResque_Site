@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap');

/* ja dit is ook de standaartvolgorde */
@layer style, containers, dial;

:root {
    /* a nice contrast */
    /* --backroundColor: oklch(38% 0.0814 268.41); */
    --backroundColor: hsl(0, 0%, 16%);
    /* kleur van de grote oppervlakken van het paneel */
    --deviceColor: oklch(48.53% 0.0439 130.6);
    /* --deviceColor: oklch(84.26% 0.1381 72.53); */
    /* kleur van de 2e dementie van het paneel(schaduwen) */
    --accentColor: oklch(40.7% 0.0271 153.93);
    /* --accentColor: rgba(158, 102, 11); */
    /* kleur voor ingebouwde accenten */
    --darkColor: oklch(22.43% 0.0439 130.6);
    /* --darkColor: rgba(65, 48, 20); */
    /* kleur van roest en natuurlijkere en dingen */
    --rustColor: rgb(99, 12, 12);
    /* interactable objects made from different materials */
    --metalColor: oklch(45.15% 0.0345 75.05);
    --metalColorAccent: oklch(41.62% 0.0469 75.05);
    --metalColorSchadow: oklch(33.38% 0.0222 75.05);

    --percent-shadow: 15%;
    --corner-angle: 50deg;
    --corner-size: 5rem;

    /* dialtje van sanne: https://codepen.io/IKreike/pen/yyLPWam?editors=1100 */
    --vlak11-angle: calc(360deg / 11);
    --vlak11: polygon(calc(50% + 50% * sin(var(--vlak11-angle) * 0)) calc(50% - 50% * cos(var(--vlak11-angle) * 0)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 1)) calc(50% - 50% * cos(var(--vlak11-angle) * 1)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 2)) calc(50% - 50% * cos(var(--vlak11-angle) * 2)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 3)) calc(50% - 50% * cos(var(--vlak11-angle) * 3)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 4)) calc(50% - 50% * cos(var(--vlak11-angle) * 4)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 5)) calc(50% - 50% * cos(var(--vlak11-angle) * 5)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 6)) calc(50% - 50% * cos(var(--vlak11-angle) * 6)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 7)) calc(50% - 50% * cos(var(--vlak11-angle) * 7)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 8)) calc(50% - 50% * cos(var(--vlak11-angle) * 8)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 9)) calc(50% - 50% * cos(var(--vlak11-angle) * 9)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 10)) calc(50% - 50% * cos(var(--vlak11-angle) * 10)),
            calc(50% + 50% * sin(var(--vlak11-angle) * 11)) calc(50% - 50% * cos(var(--vlak11-angle) * 11)));
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
button,
body {
    font-family: "Orbitron", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}


header {
    position: absolute;
    color: white;
    background-color: black;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    width: 100dvw;
    height: 100dvh;

    z-index: 3;

    inset: 0;
    font-size: 2em;

    text-transform: uppercase;
    place-items: center;

    mix-blend-mode: multiply;
    overflow: hidden;

    animation: backgroundTitle 5s 5s linear forwards;

    pointer-events: none;
}

h1 {
    animation: title 5s 5s linear forwards;
    overflow: hidden;
}

@keyframes title {
    from {
        font-weight: 400;
        font-size: 2em;
    }

    90%{
        font-size: 4em;
    }
    to {
        font-weight: 900;
        font-size: 10em;
        letter-spacing: .3em;
        filter: blur(5px);
    }
}

@keyframes backgroundTitle {
    90%{
        opacity: 100;
    }
    to{
        opacity: 0;
    }
}



body {
    background-color: var(--backroundColor);
    display: grid;
    grid-template-columns: 2fr 1fr 3fr 1fr 2fr;
    grid-template-rows: repeat(5) 1fr;
    gap: 2em;
    height: 100vh;
    width: 100vw;

    margin: 0;
    border: 0;
    box-sizing: border-box;
    position: relative;

    container-type: inline-size;
	container-name: --machine ;
}



/* different parts of the machine */
section {
    /* look into this for straight corners: https://blog.logrocket.com/create-fancy-corners-css/ */

    /* making corners and the bottom shadow */
    /* workshop van sanne: https://codepen.io/IKreike/pen/pvoeRem?editors=1100 */
    /* meer tips van sanne over gradiend over elkaar: */
    /* https://codepen.io/IKreike/pen/LEYWMLm?editors=0100 */
    background-size: calc(50% + 0.5px) calc((100% - var(--percent-shadow))/2), calc(50% + 0.5px) calc((100% - var(--percent-shadow))/2), calc(50% + 0.5px) calc(50% + 0.5px), calc(50% + 0.5px) calc(50% + 0.5px);
    background-repeat: no-repeat;
    background-position: left calc(100% - var(--percent-shadow)), right calc(100% - var(--percent-shadow)), left top, right top, left bottom, right bottom;
    background-image:
        linear-gradient(var(--corner-angle), transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(calc(-1 * var(--corner-angle)), transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(160deg, transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(-160deg, transparent var(--corner-size), var(--deviceColor) 0),
        linear-gradient(var(--corner-angle), transparent var(--corner-size), var(--accentColor)0),
        linear-gradient(calc(-1 * var(--corner-angle)), transparent var(--corner-size), var(--accentColor)0);
}

/* use this to hide the  arm moving over the section*/
/* things are still sticking out, would it be possible to use this as a mask for the thing? im also scared im not able to place buttons on top of it */
/* source:  nils 10/3/25*/
/* section:nth-of-type(2):after {
    content: "";
    position: absolute;
    inset: 0;
    inset-block-end: 20%;
    inset-block-start: 10%;
    background: #f09;
    z-index: 2;
} */

section:nth-of-type(1) {
    grid-column: span 3/5;
    /* grid-row: span 1/4; */
    display: grid;
    grid-template-columns: 1fr 3fr 1fr;
    grid-template-rows: 1fr 3fr 1fr;
    z-index: 2;

    /* ik weet dat dit mogelijk is alleen het is nu te laat om het uit te vogelen en de setup op deze manier te veranderen */
    /* grid-template-areas: "x x uitklap"
     "x radar x"
      "x x aanUit"; */
}

section:nth-of-type(2) {
    --corner-size: 1vw;
    margin: 2rem;
    position: relative;

    display: none;
    z-index: 1;

    /* display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;

    grid-template-areas: "dial1 dial2 dial3 dial4"; */


    &>div {
        width: 15rem;
        height: 15rem;
        aspect-ratio: 1;

        z-index: -2;

        background:
            linear-gradient(to top, var(--accentColor) var(--percent-shadow), var(--deviceColor) var(--percent-shadow) 50%, transparent 0),
            linear-gradient(to right, var(--accentColor) var(--percent-shadow), var(--deviceColor) var(--percent-shadow) 50%, transparent 0);

        background-size: calc(100% - var(--percent-shadow)) 100%, 100% 100%;
        background-position: bottom right, top left;
        background-repeat: no-repeat;
        position: absolute;

        left: -15rem;
        top: 50%;
        filter: brightness(.8);

        border-radius: 0;
        border: none;

        /* mask turns with so not a viable solution */
        /* mask-image: linear-gradient(to top, red 70%, transparent 70%); */
        /* mask-size:5em 5em; */
        /* mask-repeat:no-repeat; */
        /* mask-position: 40% center, 60% center; */
        /* mask-position: fixed; */
    }
}


/* display screen */
section:nth-of-type(1)>div:nth-of-type(1) {
    grid-column: 2;
    grid-row: 2;

    background-color: var(--accentColor);
    border: .5em var(--darkColor) solid;
    aspect-ratio: 1/1;
    border-radius: 50%;

    max-width: 40vw;
    max-height: 60vh;
    margin: auto;
    min-width: 20vw;

    position: relative;

    box-shadow: 0 15px var(--accentColor);


    div {
        width: 50%;
        aspect-ratio: 1;
        border: none;
        position: absolute;
        min-width: 0;
        min-height: 0;

        &::after {
            content: none;
        }

        /* quarters of the radar */
        &:nth-of-type(1) {
            background-color: aqua;
            border-radius: 0% 0% 100% 0% / 0% 0% 100% 0%;
            right: 0%;
            bottom: 0%;
            background-color: hsl(calc(360 * var(--code1, .9)) 50% 50%);
            background: repeating-radial-gradient(circle at top left, hsl(calc(360 * var(--code1, .9)) 50% 50%), hsl(calc(360 * var(--code1, .9)) 50% 50%) 7%, hsl(calc(360 * var(--code1, .9)) 100% 20%) 9%);
            opacity: 0;
        }

        &:nth-of-type(2) {
            background-color: forestgreen;
            border-radius: 0% 0% 0% 100% / 0% 0% 0% 100%;
            bottom: 0%;
            background-color: hsl(calc(360 * var(--code2, .9)) 50% 50%);
            background: repeating-radial-gradient(circle at top right, hsl(calc(360 * var(--code2, .9)) 50% 50%), hsl(calc(360 * var(--code2, .9)) 50% 50%) 7%, hsl(calc(360 * var(--code2, .9)) 100% 20%) 9%);
            opacity: 0;
        }

        &:nth-of-type(3) {
            background-color: red;
            border-radius: 100% 0% 0% 10% / 100% 0% 0% 0%;
            background-color: hsl(calc(360 * var(--code3, .9)) 50% 50%);
            background: repeating-radial-gradient(circle at bottom right, hsl(calc(360 * var(--code3, .9)) 50% 50%), hsl(calc(360 * var(--code3, .9)) 50% 50%)7%, hsl(calc(360 * var(--code3, .9)) 100% 20%) 9%);
            opacity: 0;
        }

        &:nth-of-type(4) {
            background-color: rebeccapurple;
            border-radius: 0% 100% 0% 0% / 0% 100% 0% 0%;
            right: 0%;
            background-color: hsl(calc(360 * var(--code4, .9)) 50% 50%);
            background: repeating-radial-gradient(circle at bottom left, hsl(calc(360 * var(--code4, .9)) 50% 50%), hsl(calc(360 * var(--code4, .9)) 50% 50%) 7%, hsl(calc(360 * var(--code4, .9)) 100% 20%) 9%);
            opacity: 0;
        }
    }
}

section:nth-of-type(1) div::after {
    content: "";
    position: absolute;

    width: 120%;
    max-width: 30vw;
    max-height: 50vh;
    aspect-ratio: 1;
    left: -10%;
    top: -10%;

    background-color: rgba(16, 194, 0, 0.417);
    opacity: 0;
    border-radius: 50rem;
    filter: blur(2rem);
}

/* Power button */
label:nth-of-type(1) {
    grid-column: 3;
    grid-row: 3;

    /* grid-area: aanUit; */
}


label:nth-of-type(1):has(input[type=checkbox]) {
    background: linear-gradient(var(--accentColor) calc(100% - var(--percent-shadow)), var(--darkColor) 0);

    width: fit-content;
    height: fit-content;
    padding-bottom: var(--percent-shadow);

}

input[type=checkbox]:nth-of-type(1) {
    appearance: none;
    background: linear-gradient(var(--metalColor) 50%, var(--metalColorAccent) 0%);
    width: 4em;
    aspect-ratio: 3/4;
}

/* switch de kleuren in de "checked" state */
input[type=checkbox]:checked {
    background: linear-gradient(to bottom, var(--metalColorAccent) 45%, var(--metalColor)0 90%, var(--metalColorSchadow)0);
}



/* kijkt specifiek naar of de powerknop aanstaat */
*:has(input[type=checkbox]:checked) section>div {

    div {
        animation: linear 3s turnOn forwards;
    }

    &::after {
        /* if the power switch is on, flicker into view as if the screen lights up*/
        animation: linear 3s turnOn forwards;
    }
}

@keyframes turnOn {
    0% {
        opacity: 0;
    }

    2% {
        opacity: 1;
    }

    5% {
        opacity: 0;
    }

    10% {
        opacity: 1;
    }

    12% {
        opacity: 0;
    }

    19% {
        opacity: 1;
    }

    25% {
        opacity: 0;
    }

    27% {
        opacity: 1;
    }

    35% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}


/* foldout switch */
label:nth-of-type(2):has(input[type=radio]) {
    --switch-widht: 3rem;

    grid-column: 3;
    grid-row: 2;

    width: var(--switch-widht);
    max-width: max-content;
    aspect-ratio: 1/2;

    background-color: var(--accentColor);

    border-bottom: var(--darkColor) 1rem solid;

    +div {
        background: var(--metalColor);
        border-radius: 50em;
        width: calc(.8 * 3rem);
        aspect-ratio: 1;
        position: absolute;

        position-anchor: --Bol;
        top: anchor(--Bol top);
        left: anchor(left);

        /* display: none; */
        opacity: 0;
        pointer-events: none;

        transform-origin: top left;

        &::after {
            content: none;
        }
    }
}

label:nth-of-type(2):has(input[type=radio]:checked)+div {
    animation: breekBol 5s .5s linear forwards;
}

/* idea: break the handle once swithced */
input[type=radio] {
    appearance: none;
    background: var(--metalColorAccent);
    width: 40%;
    height: 60%;

    margin: 0;
    padding: 0;
    position: relative;

    left: 30%;
    top: 0%;

    border-radius: 1em;

    &:checked {
        animation: switchStick .5s linear forwards;

        &::after {
            animation: switchBol .5s linear forwards;
        }
    }

    &::after {
        content: "";
        background: var(--metalColor);
        border-radius: 50em;
        width: 200%;
        aspect-ratio: 1;
        position: absolute;

        left: -50%;
        top: -50%;
        anchor-name: --Bol;
    }
}

@keyframes switchStick {
    50% {
        transform: scaleY(.5);
    }

    to {
        top: 40%;
        transform: scaleY(1);
    }
}

@keyframes switchBol {
    99.9% {
        opacity: 100;
    }

    to {
        opacity: 0;
        top: 70%;
    }
}

/* bounce easing van : https://easings.net/nl#easeOutBounce */
@keyframes breekBol {
    from {
        opacity: 100;
    }

    60% {
        top: anchor(--Bol top);
    }

    74.4% {
        top: calc(98.01% - (.8 * 3rem));
    }

    81.6% {
        top: calc(75.02% - (.8 * 3rem));
    }

    89.6% {
        top: calc(98.37% - (.8 * 3rem));
    }

    92.8% {
        top: calc(93.75% - (.8 * 3rem));
    }

    96.8% {
        top: calc(99.34% - (.8 * 3rem));
    }

    98.4% {
        top: calc(98.46% - (.8 * 3rem));
    }

    100% {
        top: calc(100% - (.8 * 3rem));
        opacity: 100;
    }
}


body:has(input[type=radio]:checked)>section:nth-of-type(2) {
    /* background: red; */
    animation: foldout 3s linear forwards;
    display: block;

    &>div {
        animation: hook 3s linear forwards;
        transform-origin: top left;
    }
}

@keyframes foldout {
    from {
        transform: translateX(-100%);
        scale: .8;
        filter: brightness(.7);
    }

    50% {
        scale: .8;
        transform: translateX(0%);
        filter: brightness(.7);
    }

    to {
        scale: 1;
        filter: brightness(1);

    }
}

@keyframes hook {
    from {
        transform: rotate(0);
    }

    50% {
        transform: rotate(0);
        left: -15em;
    }

    75% {
        background-size: calc(100% - var(--percent-shadow)) 100%, 100% 100%;
    }

    to {
        transform: rotate(-90deg);
        left: -7rem;
        background-size: 0 0, 100% calc(100% - 8rem);
    }
}

/* range input */
fieldset {
    border: none;
}

label:has(input[type=range]) {
    margin-top: 10vh;
}

